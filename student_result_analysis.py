# -*- coding: utf-8 -*-
"""Student_Result_Analysis.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1IYlqo1UPbWRdHO8ce65haNDGGwajii52
"""

!pip install numpy
!pip install pandas
!pip install matplotlib
!pip install seaborn

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

df = pd.read_csv("/content/Student.csv")
print(df.head())

df.describe()

df.info()

df.isnull().sum() #null values sum

"""# Drop Unnamed column"""

df = df.drop("Unnamed: 0", axis = 1)
print(df.head())

df.head() # show the chart

"""# Gender distribution"""

plt.figure(figsize=(5,5)) #This will set the height and width of the chart box
ax = sns.countplot(data = df, x = "Gender") #This will show the chart of gender
ax.bar_label(ax.containers[0]) #This is used to set the lebel or number on the plot
plt.title("Gender Distribution")
plt.show()

"""From the above chart we have analysed that the number of female is greater than the number of male and the number of females are 15424, and the number of males are 15217"""

gb = df.groupby("ParentEduc").agg({"MathScore":"mean","ReadingScore":"mean","WritingScore":"mean"})
print(gb)

plt.figure(figsize = (5,5))
sns.heatmap(gb, annot = True)
plt.title("Relation between parent's education and student's education")
plt.show()

"""From the above chart we have concluded that education of the parents have a good impact on their scores"""

gb1 = df.groupby("ParentMaritalStatus").agg({"MathScore":"mean","ReadingScore":"mean","WritingScore":"mean"})
print(gb1)

plt.figure(figsize = (5,5))
sns.heatmap(gb1,annot = True)
plt.title("Relation between parent's marital status and student's education")
plt.show()

"""From the above we have concluded that there is a negligible impct on the student's score due to their parent's marital status"""

sns.boxplot(data=df, x="MathScore")
plt.show()

sns.boxplot(data=df, x="ReadingScore")
plt.show()

sns.boxplot(data=df, x="WritingScore")
plt.show()

print(df["EthnicGroup"].unique())

"""# Distribution of ethnic group"""

groupA=df.loc[(df['EthnicGroup']=='group A')].count()
groupB=df.loc[(df['EthnicGroup']=='group B')].count()
groupC=df.loc[(df['EthnicGroup']=='group C')].count()
groupD=df.loc[(df['EthnicGroup']=='group D')].count()
groupE=df.loc[(df['EthnicGroup']=='group E')].count()
print(groupA)
print(groupB)
print(groupC)
print(groupD)
print(groupE)

l=['group A','group B','group C','group D','group E']
mlist = [groupA["EthnicGroup"],groupB["EthnicGroup"],groupC["EthnicGroup"],groupD["EthnicGroup"],groupE["EthnicGroup"]]
print(mlist)

plt.pie(mlist, labels=l, autopct="%1.2f%%")
plt.title("Distribution of Ethnic Groups")
plt.show()

ax  = sns.countplot(data = df, x="EthnicGroup")
ax.bar_label(ax.containers[0])